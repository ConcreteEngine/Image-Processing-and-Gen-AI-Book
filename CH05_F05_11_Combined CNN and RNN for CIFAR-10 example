
from keras.models import Sequential
from keras.layers import Conv2D, MaxPooling2D, Flatten, LSTM, Dense, TimeDistributed, Dropout, BatchNormalization
from keras.datasets import cifar10
from keras.utils import to_categorical
from keras.optimizers import Adam
from keras.callbacks import EarlyStopping, ReduceLROnPlateau
from keras.regularizers import l2

# A
(x_train, y_train), (x_test, y_test) = cifar10.load_data()
x_train = x_train.astype('float32') / 255.0
x_test = x_test.astype('float32') / 255.0
y_train = to_categorical(y_train, 10)
y_test = to_categorical(y_test, 10)

# B
sequence_length = 10
x_train = x_train[:len(x_train)//sequence_length * sequence_length].reshape(-1, sequence_length, 32, 32, 3)
y_train = y_train[:len(y_train)//sequence_length * sequence_length].reshape(-1, sequence_length, 10).mean(axis=1)

x_test = x_test[:len(x_test)//sequence_length * sequence_length].reshape(-1, sequence_length, 32, 32, 3)
